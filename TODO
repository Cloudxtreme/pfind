TODO before v0.1:

update TODO from my local notes and convert it do .md

TODO:

(maybe) reduce [AND exp1 [AND exp2 exp3]] to [AND exp1 exp2 exp3] etc
-xor (don't ask me why)
%uptime -lt 50
PF_KTHREAD and other flags in /stat (some function to get the flags)
threads
remove check_list (just use get_full_proc_list() instead of "all")
check that printf works with %status::title (when it's done)
check what happens if we run printf on non-existent pids
FIXME: \x?? may produce % which will be used later in printf (not a bug?)
implement all ...
help, README.md and POD
-ok (interactive -exec, but find a better name), probably -interactive modifier for all actions; maybe allow custom prompt strings;
	or just use pfind ... -confirm "kill %pid %exe" (-a) -kill/-exec ...
-opened, -reads, -writes, -locks
printf: %{func2{arbitrary arg with spaces and slashes}} (not really needed yet since -pidfile is not for printf)
(maybe) parse functions in parser, not just in tokenizer
see "ps -o" for more printf directives
do not add to many functions, prefer things like %exe -m '*bash', %cwd =~ '^a', %runtime -lt %{interval{5days}}, %vsz -gt %{size{5m}} etc
(maybe) some network checks
-fprintf
(maybe) something like -interactive [ -hup ] and -sort %pid [ ... ] in grammar instead of using -and and -or
%exec{ps -o smth %pid}
-user/-group/-uid/-gid and %user etc
%human{%vsz}
%{%vsz-%rss}

KEEP:

-lt/-gt/-eq/-ne for numeric comparison, ==/!= for strings, =~/!~ for perlre, := for assignment, = is never used

WONT:
-use glob [ exp ] | -use perlre [ exp ] - WON'T, instead make globbing the default for functions and use "%a =~ re" for perlre
(won't) compile formatted strings into subs
-print: this is called -list
-print0: no real need for this (there's no special characters in PIDs), you can use -printf '%pid\0' if absolutely necessary
-exists = -signal 0 (-exists is not an action)
-sprintf (should be allowed everywhere where simple string arg is allowed)

